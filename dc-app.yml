version: '3'
services:
  db:
    image: mysql
    container_name: webserver-database
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    volumes:
      - ./.backups:/var/webserver/.backups
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
      - database:/var/lib/mysql
    networks:
      - backend

  app:
    image: php:8.1-fpm
    container_name: webserver-application
    build:
      context: .
      dockerfile: Dockerfile
      args:
        GID: ${SYSTEM_GROUP_ID}
        UID: ${SYSTEM_USER_ID}
    restart: unless-stopped
    tty: true
    working_dir: /var/webserver/www
    volumes:
      - ./www:/var/webserver/www
      - ./log:/var/webserver/log
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - backend
    links:
      - "nginx:${APP_NAME}"

  composer:
    build:
      context: .
    image: composer
    container_name: webserver-composer
    working_dir: /var/webserver/www
    command: "composer install"
    restart: "no"
    depends_on:
      - app
    volumes:
      - ./www:/var/webserver/www

  nginx:
    image: nginx:stable-alpine
    container_name: webserver-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/var/webserver/www
      - ./log:/var/webserver/log
      - ./.docker/nginx/default.conf:/etc/nginx/includes/default.conf
      - ./.docker/nginx/templates/http.conf.template:/etc/nginx/templates/website.conf.template
    environment:
      - APP_NAME=${APP_NAME}
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  database:
